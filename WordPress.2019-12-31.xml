<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

	<!-- generator="WordPress/5.3.2" created="2019-12-31 08:19" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>お首が長いのよ</title>
	<link>https://blog.killinsun.com</link>
	<description>チラシの裏</description>
	<pubDate>Tue, 31 Dec 2019 08:19:09 +0000</pubDate>
	<language>ja</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>https://blog.killinsun.com</wp:base_site_url>
	<wp:base_blog_url>https://blog.killinsun.com</wp:base_blog_url>

		<wp:author><wp:author_id>1</wp:author_id><wp:author_login><![CDATA[killinsun]]></wp:author_login><wp:author_email><![CDATA[noneck.0311@gmail.com]]></wp:author_email><wp:author_display_name><![CDATA[首無しキリン]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>

				
	<generator>https://wordpress.org/?v=5.3.2</generator>
<site xmlns="com-wordpress:feed-additions:1">156423649</site>
		<item>
		<title>【Android App with Kotlin #2】画像を取り扱う(ImageView/ImageButton)</title>
		<link>https://blog.killinsun.com/2019/01/using-imageview-and-imagebutton-with-kotlin-android-part2/</link>
		<pubDate>Sun, 13 Jan 2019 13:54:57 +0000</pubDate>
		<dc:creator><![CDATA[killinsun]]></dc:creator>
		<guid isPermaLink="false">https://blog.killinsun.com/?p=400</guid>
		<description></description>
		<content:encoded><![CDATA[ImageViewとImageButtonの使い方をまとめました。

<!--more-->

<h2>作るもの</h2>

<img src="https://blog.killinsun.com/wp-content/uploads/2019/01/02_imgView_Button.gif" alt="" width="640" height="400" class="alignnone size-full wp-image-403" />
Activity内に<code>ImageView</code>と<code>ImageButton</code>を配置し、<code>ImageButton</code>をタップすると
<code>ImageView</code>の画像が予め用意した画像に変わります。

<h2>環境</h2>

このコードは以下の環境で書いています。

<ul>
<li>macOS 10.14.2(Mojave)</li>
<li>Android Studio 3.2.1</li>
<li>Android SDK 28</li>
<li>gradle 4.6</li>
</ul>

<h2>事前準備</h2>

app/src/main/res/drawable 内に pngまたはjpgのファイルを格納します。
今回は「いらすとや」さんから適当な画像を拝借してきました。

<h2>レイアウトファイル</h2>

<img src="https://blog.killinsun.com/wp-content/uploads/2019/01/e72e013d37ef3effd4ec5d874cf2be67.png" alt="" width="700" height="430" class="alignnone size-full wp-image-406" />
<img src="https://blog.killinsun.com/wp-content/uploads/2019/01/3ef7b7ca71fc7ef590fba1c41f3912f3.png" alt="" width="700" height="441" class="alignnone size-full wp-image-407" />
デザインタブから「Image View」、「ImageButton」を挿入します。

<img src="https://blog.killinsun.com/wp-content/uploads/2019/01/f5d9f66c6b181612c7ed66f2cd044b78.png" alt="" width="700" height="556" class="alignnone size-full wp-image-409" />
ImageViewやImageButton挿入時、どの画像を使用するか選択するウィザードが表示されます。
元々入っている画像もあれば、自分で用意した画像を直ぐに利用することも出来ます。
今回はProjects内の適当な画像を選んでみました。

他にもスパナのアイコンなど、新たに用意する必要のない位デフォルトアイコンの種類が豊富なので、最初に画面上部の検索バーから探してみるのも良いかもしれません。

テキストタブでレイアウトやコードの微修正します。

<pre><code class="language-xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;android.support.constraint.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
                                             xmlns:app="http://schemas.android.com/apk/res-auto"
                                             xmlns:tools="http://schemas.android.com/tools" android:layout_width="match_parent"
                                             android:layout_height="match_parent"&gt;

    &lt;ImageView
            android:id="@+id/imgvIcon"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="8dp"
            android:layout_marginBottom="8dp"
            android:layout_marginStart="8dp"
            android:layout_marginEnd="8dp"
            app:srcCompat="@mipmap/ic_launcher"
            app:layout_constraintTop_toTopOf="parent"
            app:layout_constraintBottom_toTopOf="@+id/imgbManage"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintEnd_toEndOf="parent"  /&gt;
    &lt;ImageButton
            android:id="@+id/imgbManage"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginBottom="156dp"
            android:layout_marginStart="8dp"
            android:layout_marginEnd="8dp"
            app:srcCompat="@android:drawable/ic_menu_manage"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintEnd_toEndOf="parent"/&gt;
&lt;/android.support.constraint.ConstraintLayout&gt;
</code></pre>

<h2>Activityファイル</h2>

<pre><code class="language-java">
class ImgActivity : AppCompatActivity(){\n

    override fun onCreate(savedInstanceState: Bundle?){
        super.onCreate(savedInstanceState)
        setContentView(R.layout.imgv_imgb_activity)

        val imgvIcon: ImageView = findViewById(R.id.imgvIcon) //[1]
        val imgbManage: ImageButton = findViewById(R.id.imgbManage) //[2]

        //[3]
        imgbManage.setOnClickListener{
            imgvIcon.setImageResource(R.drawable.pose_kyosyu_boy) //[4]
        }
    }
}
</code></pre>

<h3>[1]、[2]</h3>

<code>ImageView</code>クラス、<code>Image Button</code>クラスを それぞれ<code>imgvIcon</code>、<code>imgbManage</code>という名前で宣言します。
同時に、レイアウトファイルに用意したウィジェットのIDを引っ張ってきます。

<ul>
<li><code>val</code> は定数。　Javaのfinalと同じ。基本はこっちで宣言するといい。</li>
<li><code>imgvIcon</code> ImageView型の定数を<code>imgvIcon</code>という名前で用意する</li>
<li><code>imgbManage</code> ImageButton型の定数を<code>imgbManage</code>という名前で用意する</li>
</ul>

<h3>[3]</h3>

ImageButtonクラスが持つメソッド<code>setOnClickListener</code>を使って、
ボタンがタップされた時の動作を記述しています。
(厳密にはImageButtonクラスの親クラス、更に親クラスのViewクラスが持つメソッド)

この時、<code>imgbManage</code>(すなわちImageButtonクラス）が
どんなメソッドを持っているかはここで調べられます。

<a href="https://developer.android.com/reference/android/widget/ImageButton">Image Button</a>

<h3>[4]</h3>

<code>setImageResource</code>メソッドを使って、　drawableディレクトリ内に格納した
画像のファイル名を<code>R.drawable</code>というキーから指定しています。
見ての通り、拡張子は指定しません。

<h2>Activityファイル（別の書き方）</h2>

Kotlin Android extentionsが有効であれば、以下のような書き方もできます。

valの宣言文がそのまま無くせます。

<pre><code class="language-java">

class imgActivity : AppCompatActivity(){\n

    override fun onCreate(savedInstanceState: Bundle?){
        super.onCreate(savedInstanceState)
        setContentView(R.layout.imgv_imgb_activity)


        imgbManage.setOnClickListener{
            imgvIcon.setImageResource(R.drawable.pose_kyosyu_boy)
        }


    }
}

</code></pre>

<h2>リンク</h2>

<h3>次の記事</h3>

次回はListViewです。
<a href="https://blog.killinsun.com/?p=418">【Android App with Kotlin #3】ListViewを使う</a>

<h3>前回の記事</h3>

<a href="https://blog.killinsun.com/?p=353">【Android App with Kotlin #1】ボタンウィジェットを使う</a>

/以上]]></content:encoded>
		<excerpt:encoded><![CDATA[ImageViewとImageButtonの使い方をまとめました。]]></excerpt:encoded>
		<wp:post_id>400</wp:post_id>
		<wp:post_date><![CDATA[2019-01-13 22:54:57]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-01-13 13:54:57]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[using-imageview-and-imagebutton-with-kotlin-android-part2]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="android"><![CDATA[Android]]></category>
		<category domain="post_tag" nicename="android-app-with-kotlin"><![CDATA[Android App with Kotlin]]></category>
		<category domain="category" nicename="android%e3%82%a2%e3%83%97%e3%83%aa%e9%96%8b%e7%99%ba"><![CDATA[Androidアプリ開発]]></category>
		<category domain="post_tag" nicename="imagebutton"><![CDATA[ImageButton]]></category>
		<category domain="post_tag" nicename="imageview"><![CDATA[ImageView]]></category>
		<category domain="category" nicename="kotlin"><![CDATA[Kotlin]]></category>
		<category domain="post_tag" nicename="kotlin"><![CDATA[Kotlin]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_sha]]></wp:meta_key>
		<wp:meta_value><![CDATA[3538f1add896ed73ed12432d34abe678303bda1a]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpghs_github_path]]></wp:meta_key>
		<wp:meta_value><![CDATA[_posts/2019-01-13-using-imageview-and-imagebutton-with-kotlin-android-part2.md]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_ez-toc-disabled]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_ez-toc-insert]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_ez-toc-heading-levels]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_ez-toc-alttext]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_ez-toc-exclude]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[%e3%80%90android-app-for-kotlin-2%e3%80%91%e7%94%bb%e5%83%8f%e3%82%92%e5%8f%96%e3%82%8a%e6%89%b1%e3%81%86imageview-imagebutton]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[449]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_pingme]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_encloseme]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[%e3%80%90android-app-with-kotlin-2%e3%80%91%e7%94%bb%e5%83%8f%e3%82%92%e5%8f%96%e3%82%8a%e6%89%b1%e3%81%86imageview-imagebutton]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>110</wp:comment_id>
			<wp:comment_author><![CDATA[【Android App for Kotlin #1】ボタンウィジェットを使う - お首が長いのよ]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>https://blog.killinsun.com/?p=353</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[127.0.0.1]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2019-01-13 22:58:48]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2019-01-13 13:58:48]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] 次回はImage ViewとImage Buttonです。 【Android App for Kotlin #2】画像を取り扱う(ImageView/ImageButton) [&#8230;]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1547387928.524056;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1547387959.4140739;s:5:"event";s:15:"status-approved";s:4:"user";s:9:"killinsun";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>111</wp:comment_id>
			<wp:comment_author><![CDATA[【Android App for Kotlin #3】ListViewを使う - お首が長いのよ]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>https://blog.killinsun.com/?p=418</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[127.0.0.1]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2019-01-15 23:16:11]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2019-01-15 14:16:11]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] 【Android App for Kotlin #2】画像を取り扱う(ImageView/ImageButton) [&#8230;]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1547561772.0793891;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1547561786.0620899;s:5:"event";s:15:"status-approved";s:4:"user";s:9:"killinsun";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title>【Android App with Kotlin #3】ListViewを使う</title>
		<link>https://blog.killinsun.com/2019/01/using-listview-with-kotlin-android-part1/</link>
		<pubDate>Tue, 15 Jan 2019 14:15:56 +0000</pubDate>
		<dc:creator><![CDATA[killinsun]]></dc:creator>
		<guid isPermaLink="false">https://blog.killinsun.com/?p=418</guid>
		<description></description>
		<content:encoded><![CDATA[まずはListViewに適当なデータを表示させるシンプルなものを用意しました。

<!--more-->

<h2>作るもの</h2>

<img src="https://blog.killinsun.com/wp-content/uploads/2019/01/03_listview.gif" alt="" width="640" height="400" class="alignnone size-full wp-image-421" />
ListviewActivity.kt内で宣言したString型のコレクションを表示させるListViewです。

<h2>環境</h2>

このコードは以下の環境で書いています。

<ul>
<li>macOS 10.14.2(Mojave)</li>
<li>Android Studio 3.2.1</li>
<li>Android SDK 28</li>
<li>gradle 4.6</li>
</ul>

<h2>事前準備</h2>

特にありません。
表示させるアイテムのネタを考えておきましょう。

<h2>レイアウトファイル</h2>

<img src="https://blog.killinsun.com/wp-content/uploads/2019/01/3c645c95809a7bda6124f034e0b1eacf.png" alt="" width="1023" height="632" class="alignnone size-full wp-image-420" />
デザインタブから「ListView」を挿入します。
Paletteの<code>Legacy</code>に入っているので注意しましょう。

テキストタブでレイアウトやコードの微修正します。

<pre><code class="language-xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;android.support.constraint.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
                                             xmlns:app="http://schemas.android.com/apk/res-auto" xmlns:tools="http://schemas.android.com/tools" android:layout_width="match_parent"
                                             android:layout_height="match_parent"&gt;

    &lt;ListView
            android:id="@+id/lvHeroes"
            android:layout_width="368dp"
            android:layout_height="495dp"
            android:layout_marginTop="8dp"
            android:layout_marginBottom="8dp"
            android:layout_marginStart="8dp"
            android:layout_marginEnd="8dp"
            app:layout_constraintTop_toTopOf="parent"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintEnd_toEndOf="parent" /&gt;
&lt;/android.support.constraint.ConstraintLayout&gt;
</code></pre>

<h2>Activityファイル</h2>

<pre><code class="language-Java">class ListviewActivity: AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?){
        super.onCreate(savedInstanceState)
        setContentView(R.layout.listview_activity)

        val heroes:Array&lt;String&gt; = arrayOf("Iron Man", "Captain America", "Thor") //[1]
        val adapter = ArrayAdapter&lt;String&gt;(this,android.R.layout.simple_list_item_1, heroes) //[2]
        val lvHeroes: ListView = findViewById(R.id.lvHeroes) //[3]

        lvHeroes.adapter = adapter //[4]

    }
}
</code></pre>

コードの説明に入ります。

<h3>[1]</h3>

String型が格納されるコレクション(配列)を宣言すると同時に値を代入しています。

<h3>[2]</h3>

ListViewというレイアウトと、<code>[1]</code>で宣言したコレクションを紐付けるアダプターです。

<ul>
<li><code>this</code>
コンテキストです。まだ自分もよくわかっていないので調べて加筆します。</li>
<li><code>android.R.layout.simple_list_item_1</code>
はじめから用意されているListViewの項目１つ分のレイアウトです。
独自のレイアウトを適用させる場合は、この引数を変える事になります。</li>
<li><code>heroes</code>
<code>[1]</code>で宣言したコレクションの名前で、アダプターにセットしています。</li>
</ul>

<h3>[3]</h3>

レイアウトファイルで用意した<code>ListView</code>をActivityファイルで使えるように宣言しています。
Kotlin Andorid extentionsが有効であれば、この項目は書かなくてもレイアウトファイルで
宣言した<code>android:id</code>でそのまま扱えます。

<h3>[4]</h3>

<code>[3]</code>で宣言した<code>ListView</code>と、<code>[2]</code>で宣言したadapterを紐づけています。

<h2>リンク</h2>

<h3>次の記事</h3>

次回はListViewで用意したアイテムにタッチすると
処理が実行されるようにします。
<a href="https://blog.killinsun.com/?p=431">【Android App for Kotlin #4】ListViewを使う(2)</a>

<h3>前回の記事</h3>

<a href="https://blog.killinsun.com/?p=400">【Android App with Kotlin #2】画像を取り扱う(ImageView/ImageButton)</a>

/以上]]></content:encoded>
		<excerpt:encoded><![CDATA[まずはListViewに適当なデータを表示させるシンプルなものを用意しました。]]></excerpt:encoded>
		<wp:post_id>418</wp:post_id>
		<wp:post_date><![CDATA[2019-01-15 23:15:56]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-01-15 14:15:56]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[using-listview-with-kotlin-android-part1]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="android"><![CDATA[Android]]></category>
		<category domain="post_tag" nicename="android-app-with-kotlin"><![CDATA[Android App with Kotlin]]></category>
		<category domain="category" nicename="android%e3%82%a2%e3%83%97%e3%83%aa%e9%96%8b%e7%99%ba"><![CDATA[Androidアプリ開発]]></category>
		<category domain="category" nicename="kotlin"><![CDATA[Kotlin]]></category>
		<category domain="post_tag" nicename="kotlin"><![CDATA[Kotlin]]></category>
		<category domain="post_tag" nicename="listview"><![CDATA[ListView]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_sha]]></wp:meta_key>
		<wp:meta_value><![CDATA[f52076ba2435eecc8b42ddb178411e4e6ef5346f]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpghs_github_path]]></wp:meta_key>
		<wp:meta_value><![CDATA[_posts/2019-01-15-using-listview-with-kotlin-android-part1.md]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_ez-toc-disabled]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_ez-toc-insert]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_ez-toc-heading-levels]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_ez-toc-alttext]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_ez-toc-exclude]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[%e3%80%90android-app-for-kotlin-3%e3%80%91listview%e3%82%92%e4%bd%bf%e3%81%86]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[449]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_pingme]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_encloseme]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[%e3%80%90android-app-with-kotlin-3%e3%80%91listview%e3%82%92%e4%bd%bf%e3%81%86]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>112</wp:comment_id>
			<wp:comment_author><![CDATA[【Android App for Kotlin #2】画像を取り扱う(ImageView/ImageButton) - お首が長いのよ]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>https://blog.killinsun.com/?p=400</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[127.0.0.1]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2019-01-15 23:17:26]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2019-01-15 14:17:26]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] 次回はListViewです。 【Android App for Kotlin #3】ListViewを使う [&#8230;]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1547561846.7994499;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1547561933.274034;s:5:"event";s:15:"status-approved";s:4:"user";s:9:"killinsun";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>113</wp:comment_id>
			<wp:comment_author><![CDATA[【Android App for Kotlin #4】ListViewを使う(2) - お首が長いのよ]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>https://blog.killinsun.com/?p=431</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[127.0.0.1]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2019-01-21 08:01:23]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2019-01-20 23:01:23]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] 前回の記事の成果物を使います。 [&#8230;]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1548025283.9554939;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1548025363.3311579;s:5:"event";s:15:"status-approved";s:4:"user";s:9:"killinsun";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title>【Android App with Kotlin #4】ListViewを使う(2)</title>
		<link>https://blog.killinsun.com/2019/01/using-listview-with-kotlin-android-part2/</link>
		<pubDate>Sun, 20 Jan 2019 23:01:12 +0000</pubDate>
		<dc:creator><![CDATA[killinsun]]></dc:creator>
		<guid isPermaLink="false">https://blog.killinsun.com/?p=431</guid>
		<description></description>
		<content:encoded><![CDATA[ListViewの要素をタップした時の動作を追加しました。

<!--more-->

<h2>作るもの</h2>

<img src="https://blog.killinsun.com/wp-content/uploads/2019/01/04_listview_touchEvent.gif" alt="" width="640" height="400" class="alignnone size-full wp-image-433" />
前回の記事で作成したListViewに対し、タップイベントを追加しました。

<h2>環境</h2>

このコードは以下の環境で書いています。

<ul>
<li>macOS 10.14.2(Mojave)</li>
<li>Android Studio 3.2.1</li>
<li>Android SDK 28</li>
<li>gradle 4.6</li>
</ul>

<h2>事前準備</h2>

<a href="https://blog.killinsun.com/?p=418">前回の記事</a>の成果物を使います。

<h2>レイアウトファイル</h2>

<a href="https://blog.killinsun.com/?p=418">前回の記事</a>で利用したものを使います。

<h2>Activityファイル</h2>

<pre><code class="language-Java">class ListviewActivity: AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?){
        super.onCreate(savedInstanceState)
        setContentView(R.layout.listview_activity)

        val heroes:Array&lt;String&gt; = arrayOf("Iron Man", "Captain America", "Thor")
        val realName:Array&lt;String&gt; = arrayOf("Tony Stark", "Steve Rogers", "Thor Odinson") //追加[1]

        val adapter = ArrayAdapter&lt;String&gt;(this,android.R.layout.simple_list_item_1, heroes)
        val lvHeroes: ListView = findViewById(R.id.lvHeroes)

        lvHeroes.adapter = adapter

        /*
            追加[2]
            引数は「parent」、「view」、「position」、「id」の４つで、
            使用しない引数については「_(アンダースコア)」で省略出来る。
        */
        lvHeroes.setOnItemClickListener{ _, _, position, _ -&gt;
            //タップされたアイテムの位置(Position)をインデックスに配列の中身をToastで表示
            Toast.makeText(this,realName[position],Toast.LENGTH_SHORT).show()
        }
    }
}
</code></pre>

コードの説明に入ります。

<h3>[1]</h3>

<pre><code class="language-java">val realName:Array&lt;String&gt; = arrayOf("Tony Stark", "Steve Rogers", "Thor Odinson") //追加
</code></pre>

新たに配列を宣言しました。　本来ならばHashMapを用いて<code>heroes</code>の要素と一致した
オブジェクトを作るのが望ましいですが、今回は単純にしました。

<h3>[2]</h3>

<pre><code class="language-java">lvHeroes.setOnItemClickListener{ _, _, position, _ -&gt;
}
</code></pre>

<code>setOnLitemClickListener</code>を使って、ListView内の単要素をタップされた際の
アクションイベントを定義しています。

コメントの通り、引数は４つ指定する必要がありますが、Kotlinの場合は<code>_</code>で省略出来ます。
今回は<code>position</code>という、<strong>どの要素がタップされたか</strong>を判断する為に使う引数を
使用しています。

<h2>リンク</h2>

<h3>次の記事</h3>

<a href="https://blog.killinsun.com/?p=444">【Android App with Kotlin #5】RecyclerViewを使う</a>

<h3>前回の記事</h3>

<a href="https://blog.killinsun.com/?p=418">【Android App with Kotlin #3】ListViewを使う</a>

/以上]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>431</wp:post_id>
		<wp:post_date><![CDATA[2019-01-21 08:01:12]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-01-20 23:01:12]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[using-listview-with-kotlin-android-part2]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="android"><![CDATA[Android]]></category>
		<category domain="post_tag" nicename="android-app-with-kotlin"><![CDATA[Android App with Kotlin]]></category>
		<category domain="category" nicename="android%e3%82%a2%e3%83%97%e3%83%aa%e9%96%8b%e7%99%ba"><![CDATA[Androidアプリ開発]]></category>
		<category domain="category" nicename="kotlin"><![CDATA[Kotlin]]></category>
		<category domain="post_tag" nicename="kotlin"><![CDATA[Kotlin]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_excerpt]]></wp:meta_key>
		<wp:meta_value><![CDATA[ListViewの要素をタップした時の動作を追加しました。]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_sha]]></wp:meta_key>
		<wp:meta_value><![CDATA[984beb35e4a9917e0cb945510f1e2ce6abc7a97c]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpghs_github_path]]></wp:meta_key>
		<wp:meta_value><![CDATA[_posts/2019-01-21-using-listview-with-kotlin-android-part2.md]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_ez-toc-disabled]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_ez-toc-insert]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_ez-toc-heading-levels]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_ez-toc-alttext]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_ez-toc-exclude]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[449]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_pingme]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_encloseme]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[%e3%80%90android-app-for-kotlin-4%e3%80%91listview%e3%82%92%e4%bd%bf%e3%81%862]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>114</wp:comment_id>
			<wp:comment_author><![CDATA[【Android App with Kotlin #3】ListViewを使う - お首が長いのよ]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>https://blog.killinsun.com/?p=418</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[127.0.0.1]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2019-01-21 08:02:22]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2019-01-20 23:02:22]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] たアイテムにタッチすると 処理が実行されるようにします。 【Android App for Kotlin #4】ListViewを使う(2) [&#8230;]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1548025342.5060191;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1548025363.310761;s:5:"event";s:15:"status-approved";s:4:"user";s:9:"killinsun";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>115</wp:comment_id>
			<wp:comment_author><![CDATA[【Android App with Kotlin #5】RecyclerViewを使う - お首が長いのよ]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>https://blog.killinsun.com/?p=444</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.18.0.2]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2019-02-06 16:00:57]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2019-02-06 07:00:57]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] 【Android App with Kotlin #4】ListViewを使う(2) [&#8230;]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1549436457.896876;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1550703033.189519;s:5:"event";s:15:"status-approved";s:4:"user";s:9:"killinsun";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
				</channel>
</rss>
	